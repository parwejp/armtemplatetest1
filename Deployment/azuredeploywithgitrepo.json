{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "baseResourceName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "The base name to use for the resources that will be provisioned."
      }
    },
    "appClientId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "metadata": {
        "description": "The client ID of the bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
      }
    },
    "appClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "The client secret of the bot Azure AD app."
      }
    },
    "appDisplayName": {
      "type": "string",
      "defaultValue": "Distribution Lookup",
      "minLength": 1,
      "metadata": {
        "description": "The app display name."
      }
    },
    "appDescription": {
      "type": "string",
      "defaultValue": "Search available Distribution lists in organization and find out the online contacts to initiate chat.",
      "minLength": 1,
      "metadata": {
        "description": "The app description."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "The ID of the tenant to which the app will be deployed."
      }
    },
    "hostingPlanSku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Premium",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "hostingPlanSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "2",
      "metadata": {
        "description": "The size of the hosting plan (small, medium, or large)."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "graphScope": {
      "type": "string",
      "defaultValue": "https://graph.microsoft.com/User.ReadBasic.All openid profile",
      "minLength": 1,
      "metadata": {
        "description": "MS graph API permissions."
      }
    },
    "skypeScope": {
      "type": "string",
      "defaultValue": "https://api.skypeforbusiness.com/Contacts.ReadWrite",
      "minLength": 1,
      "metadata": {
        "description": "Skype online UCWA API permissions."
      }
    },
    "cacheInterval": {
      "type": "int",
      "defaultValue": 300,
      "metadata": {
        "description": "# of seconds to cache user presence information in memory."
      }
    },
    "gitRepoUrl": {
      "type": "string",
      "metadata": {
        "description": "The URL to the GitHub repository to deploy."
      },
      "defaultValue": "https://github.com/parwejp/armtemplatetest1.git"
    },
    "gitBranch": {
      "type": "string",
      "metadata": {
        "description": "The branch of the GitHub repository to deploy."
      },
      "defaultValue": "development"
    }
  },
  "variables": {
    "appName": "[parameters('baseResourceName')]",
    "appDomain": "[concat(variables('appName'), '.azurewebsites.net')]",
    "appUrl": "[concat('https://', variables('appDomain'))]",
    "hostingPlanName": "[parameters('baseResourceName')]",
    "storageAccountName": "[uniquestring(concat(resourceGroup().id, parameters('baseResourceName')))]",
    "appInsightsName": "[parameters('baseResourceName')]",
    "sharedSkus": [
      "Free",
      "Shared"
    ],
    "isSharedPlan": "[contains(variables('sharedSkus'), parameters('hostingPlanSku'))]",
    "skuFamily": "[if(equals(parameters('hostingPlanSku'), 'Shared'), 'D', take(parameters('hostingPlanSku'), 1))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-11-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      },
      "sku": {
        "name": "[if(variables('isSharedPlan'), concat(variables('skuFamily'), '1'), concat(variables('skuFamily'), parameters('hostingPlanSize')))]",
        "tier": "[parameters('hostingPlanSku')]",
        "size": "[concat(variables('skuFamily'), parameters('hostingPlanSize'))]",
        "family": "[variables('skuFamily')]",
        "capacity": 0
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('appName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "properties": {
        "name": "[variables('appName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "enabled": true,
        "reserved": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": "[not(variables('isSharedPlan'))]",
          "appSettings": [
            {
              "name": "AzureAd:Instance",
              "value": "https://login.microsoftonline.com/"
            },
            {
              "name": "AzureAd:TenantId",
              "value": "[parameters('tenantId')]"
            },
            {
              "name": "AzureAd:ClientId",
              "value": "[parameters('appClientId')]"
            },
            {
              "name": "AzureAd:ClientSecret",
              "value": "[parameters('appClientSecret')]"
            },
            {
              "name": "AzureAd:ApplicationIdURI",
              "value": "[variables('appUrl')]"
            },
            {
              "name": "AzureAd:ValidIssuers",
              "value": "[concat('https://login.microsoftonline.com/', parameters('tenantId'), '/v2.0', ',https://sts.windows.net/',parameters('tenantId'),'/')]"
            },
            {
              "name": "AzureAd:GraphScope",
              "value": "[parameters('graphScope')]"
            },
            {
              "name": "AzureAd:SkypeScope",
              "value": "[parameters('skypeScope')]"
            },
            {
              "name": "CacheInterval",
              "value": "[parameters('cacheInterval')]"
            },
            {
              "name": "StorageAccountConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "10.15.2"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
      ],
      "resources": [
        {
          "apiVersion": "2015-08-01",
          "name": "web",
          "type": "sourcecontrols",
          "condition": "[not(empty(parameters('gitRepoUrl')))]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('appName'))]"
          ],
          "properties": {
            "RepoUrl": "[parameters('gitRepoUrl')]",
            "branch": "[parameters('gitBranch')]",
            "IsManualIntegration": true
          }
        }
      ]
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    }
  ],
  "outputs": {
    "appClientId": {
      "type": "string",
      "value": "[parameters('appClientId')]"
    },
    "appDomain": {
      "type":"string",
      "value": "[concat('Please use ', variables('appDomain'), ' in the manifest')]"
    }
  }
}